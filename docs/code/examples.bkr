{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "imports": "graxxia.*\ncom.twosigma.beaker.chart.Color\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.NamespaceClient\norg.briljantframework.Bj\norg.briljantframework.array.*\norg.briljantframework.array.api.*\norg.briljantframework.linalg.api.*\norg.briljantframework.data.*\norg.briljantframework.data.dataframe.*\norg.briljantframework.data.vector.*\norg.apache.commons.math3.distribution.*\norg.apache.commons.math3.complex.*",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            },
            "classPath": "/Users/isak-kar/Projects/briljant/briljant-core/build/libs/briljant-core-0.1-SNAPSHOT-all.jar"
        },
        {
            "name": "Java",
            "plugin": "Java",
            "imports": "com.twosigma.beaker.chart.Color\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.NamespaceClient\norg.briljantframework.Bj\norg.briljantframework.array.*\norg.briljantframework.array.api.*\norg.briljantframework.linalg.api.*\norg.briljantframework.data.*\norg.briljantframework.data.dataframe.*\norg.briljantframework.data.vector.*\norg.apache.commons.math3.distribution.*\norg.apache.commons.math3.complex.*",
            "view": {
                "cm": {
                    "mode": "text/x-java"
                }
            },
            "classPath": "/Users/isak-kar/Projects/briljant/briljant-core/build/libs/briljant-core-0.1-SNAPSHOT-all.jar"
        }
    ],
    "cells": [
        {
            "id": "codehFMSrO",
            "type": "code",
            "evaluator": "Java",
            "input": {
                "body": [
                    "NormalDistribution sampler = new NormalDistribution(0, 1);",
                    "DoubleArray a = Bj.doubleArray(3, 4);",
                    "DoubleArray b = Bj.rand(3 * 4, sampler).reshape(3, 4);",
                    "",
                    "// Assign the values of b to a",
                    "a.assign(b);",
                    "System.out.println(a);",
                    "",
                    "// assigning b to a while taking the square root of the elements",
                    "a.assign(b, Math::sqrt);",
                    "System.out.println(a);",
                    "",
                    "// assign the values of b to a while multiplying",
                    "// reshape a and return a view to x",
                    "DoubleArray x = a.assign(b, v -> v * v).reshape(4, 3);",
                    "System.out.println(x);",
                    "",
                    "// Note that the values of a are updated, but its shape is unchanged",
                    "System.out.println(a);",
                    "",
                    "// Get a view of the first row of x",
                    "System.out.println(x.getRow(0));"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "array([[ 1.048,  0.485, -0.353,  0.387],\n       [-1.766,  0.187,  0.237,  1.632],\n       [-0.272, -0.600, -1.617, -1.015]] type: double)\narray([[1.024, 0.697,   NaN, 0.622],\n       [  NaN, 0.432, 0.487, 1.278],\n       [  NaN,   NaN,   NaN,   NaN]] type: double)\narray([[1.099, 0.035, 2.615],\n       [3.118, 0.360, 0.150],\n       [0.074, 0.125, 2.664],\n       [0.235, 0.056, 1.029]] type: double)\narray([[1.099, 0.235, 0.125, 0.150],\n       [3.118, 0.035, 0.056, 2.664],\n       [0.074, 0.360, 2.615, 1.029]] type: double)\narray([[1.099, 0.035, 2.615]] type: double)\n"
                        }
                    ]
                },
                "selectedType": "Results",
                "pluginName": "Java",
                "shellId": "66bf9c0e-9d9b-441b-827e-9f74895a878a",
                "elapsedTime": 931
            },
            "evaluatorReader": true,
            "lineCount": 22
        },
        {
            "id": "codeFKaxwl",
            "type": "code",
            "evaluator": "Java",
            "input": {
                "body": [
                    "DoubleArray a = Bj.doubleArray(3, 3);",
                    "a.set(0, 0, 10); ",
                    "a.set(0, 1, 9); ",
                    "a.set(0, 2, 8); ",
                    "",
                    "System.out.println(a);",
                    "",
                    "// Iterating the array in column-major linearized order",
                    "for (int i = 0; i < a.size(); i++) { ",
                    "  System.out.println(a.get(i)); ",
                    "}"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "array([[10.000, 9.000, 8.000],\n       [ 0.000, 0.000, 0.000],\n       [ 0.000, 0.000, 0.000]] type: double)\n10.0\n0.0\n0.0\n9.0\n0.0\n0.0\n8.0\n0.0\n0.0\n"
                        }
                    ]
                },
                "selectedType": "Results",
                "pluginName": "Java",
                "shellId": "66bf9c0e-9d9b-441b-827e-9f74895a878a",
                "elapsedTime": 839
            },
            "evaluatorReader": true,
            "lineCount": 11
        },
        {
            "id": "codeLUdSqE",
            "type": "code",
            "evaluator": "Java",
            "input": {
                "body": [
                    "import org.briljantframework.array.netlib.NetlibArrayBackend;",
                    "ArrayBackend mb = new NetlibArrayBackend();",
                    "ArrayFactory bj = mb.getArrayFactory();",
                    "ArrayRoutines bjr = mb.getArrayRoutines();",
                    "LinearAlgebraRoutines linalg = mb.getLinearAlgebraRoutines();",
                    "",
                    "DoubleArray x = bj.array(new double[]{1, 5, 9, 2, 6, 10, 3, 7, 11, 4, 8, 12 }).reshape(4, 3);",
                    "System.out.println(x);",
                    "",
                    "DoubleArray c = bj.doubleArray(3, 3);",
                    "bjr.gemm(Op.TRANSPOSE, Op.KEEP, 1, x, x, 1, c);",
                    "",
                    "System.out.println(c);",
                    "",
                    "double sum = bjr.sum(c);",
                    "System.out.println(sum);",
                    "x.transpose().mmul(x);",
                    "x.mmul(Op.TRANSPOSE, x, Op.KEEP);"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "array([[1.000,  6.000, 11.000],\n       [5.000, 10.000,  4.000],\n       [9.000,  3.000,  8.000],\n       [2.000,  7.000, 12.000]] type: double)\narray([[111.000,  97.000, 127.000],\n       [ 97.000, 194.000, 214.000],\n       [127.000, 214.000, 345.000]] type: double)\n1526.0\n"
                        }
                    ]
                },
                "selectedType": "Results",
                "pluginName": "Java",
                "shellId": "66bf9c0e-9d9b-441b-827e-9f74895a878a",
                "elapsedTime": 809
            },
            "evaluatorReader": true,
            "lineCount": 18
        }
    ]
}
